{"version":3,"sources":["app.js"],"names":["express","require","db","authenticate","then","console","log","err","error","app","get","res","send","req","next","users","regeneratorRuntime","async","_context","prev","awrap","Users","findAll","sent","json","t0","stop"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,GAAAD,QAAA,oBACMD,MAAUC,QAAQ,yBAMxBC,GAAAC,eAEKC,KAAK,WAAA,OAAMC,QAAQC,IAAI,gCAF5B,MAGW,SAAAC,GAAG,OAAIF,QAAQG,MAAMD,KAFhC,IACUE,IAAAT,UACIS,IAAAC,IAAA,IAAIL,SAAAA,EAAQG,GAF1BG,EAAAC,KAAA,6BAOAH,IAAIC,IAAI,SAAK,SAACG,EAAKF,EAAQG,GAAd,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAJ,MAAA,KAAA,EAAA,OAAAI,EAAAC,KAAA,EAAAD,EAAAJ,KAAA,EAAAE,mBAAAI,MAIKC,MAAAC,WAJL,KAAA,EAIKP,EAJLG,EAAAK,KAIKZ,EAAAa,KAAAT,GAJLG,EAAAJ,KAAA,GAAA,MAAA,KAAA,EAAAI,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,MAAA,GAIKJ,EAAAI,EAAAO,IAJL,KAAA,GAAA,IAAA,MAAA,OAAAP,EAAAQ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAWLf,IAAAA,OAAAA,IAAIa,WAPMnB,QAAAC,IAAA","file":"app.min.js","sourcesContent":["//Importamos express\r\nconst express = require('express');\r\nconst db = require('./utils/database');\r\nconst Users = require('./models/users.models');\r\n\r\n//Creamos la instancia\r\n\r\n//Ejecutar el método authenticate\r\ndb.authenticate() //ES un método asincrono\r\n    .then(() => console.log('Base de datos conectada...'))\r\n    .catch(err => console.error(err));\r\n\r\nconst app = express();\r\n\r\n//Generamos una ruta app.get\r\napp.get('/', (req, res) => {\r\n    res.send('Servidor funcionando...')\r\n});\r\n\r\napp.get('/users', async (req, res, next) => {\r\n    \r\n    try {\r\n        //Pedir la información a la db\r\n        const users = await Users.findAll();\r\n\r\n        //Responder con la información de la bd\r\n        res.json(users);\r\n\r\n    } catch (error) {\r\n        next(error);\r\n    }\r\n\r\n})\r\n\r\n//Dejar escuchando a nuestro servidor en un puerto\r\napp.listen(8000, () => {\r\n    console.log(\"Servidor escuchando en el puerto 8000\")\r\n});"]}