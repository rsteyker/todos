{"version":3,"sources":["app.js"],"names":["express","require","db","authenticate","then","console","log","error","err","sync","app","use","json","get","req","res","post","newTodos","regeneratorRuntime","async","_context","prev","next","body","awrap","Todos","create","status","send","t0","stop","listen"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,GAAAD,QAAA,oBACMD,MAAUC,QAAQ,wBAQxBC,GAAGC,eACEC,KAAK,WAAA,OAAMC,QAAQC,IAAI,gCAD5B,MAAGH,SAAAA,GAAAA,OAAeE,QAAAE,MAAAC,KACRN,GADVO,OAEcL,KAAA,WAAA,OAAIC,QAAAC,IAAA,gCADR,MAGV,SAAAC,GAAA,OAAAF,QAAAC,IAAAC,KACAL,IAAGO,IACAL,UACMM,IAAAC,IAAAX,QAAkBY,QAQ3BF,IAAIG,IAAI,IAAK,SAACC,EAAKC,GAHfJ,EAAIX,KAAAA,6BAKPU,IAEDM,KAAA,SAAA,SAAAF,EAAAC,GAAA,IAAAE,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EACmBJ,EAAAH,EAAAS,KADnBH,EAAAE,KAAA,EAAAJ,mBAAAM,MACmBC,MAAAC,OAAAT,IADnB,KAAA,EAGQF,EAAAY,OAAA,KAAAC,OAHRR,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,MAAA,GACmBL,EAAAY,OAAA,KAAAf,KAAAQ,EAAAS,IADnB,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OACmBpB,IAAAqB,OAAA,IAAA,WAAA1B,QAAAC,IAAA","file":"app.min.js","sourcesContent":["//Importamos express\r\nconst express = require('express');\r\nconst db = require('./utils/database');\r\nconst Todos = require('./models/todos.model');\r\n\r\n\r\n//Creamos la instancia\r\n\r\n//Ejecutar el método authenticate\r\ndb.authenticate() //ES un método asincrono\r\n    .then(() => console.log('Base de datos conectada...'))\r\n    .catch(err => console.error(err));\r\n\r\n//Sincronizar mi bd\r\ndb.sync()\r\n  .then(() => console.log('Base de datos sincronizada'))\r\n  .catch((error) => console.log(error));\r\n\r\nconst app = express();\r\n\r\n//Sirve para extraer en json\r\napp.use(express.json());\r\n\r\n//Generamos una ruta app.get\r\napp.get('/', (req, res) => {\r\n    res.send('Servidor funcionando...')\r\n});\r\n\r\n//\r\napp.post('/todos', async (req, res) => {\r\n    try {\r\n        //Extraemos el cuerpo de la petición\r\n        const newTodos = req.body;\r\n\r\n        //Insertamos valores\r\n        await Todos.create(newTodos);\r\n\r\n        //Repondemos con un 201 = created\r\n        res.status(201).send();\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n});\r\n\r\n\r\n//Dejar escuchando a nuestro servidor en un puerto\r\napp.listen(8000, () => {\r\n    console.log(\"Servidor escuchando en el puerto 8000\")\r\n});"]}